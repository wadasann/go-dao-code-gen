// Code generated for package tplbin by go-bindata DO NOT EDIT. (@generated)
// sources:
// templates/conds.tpl
// templates/dao.tpl
// templates/table.tpl
package tplbin

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _condsTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x55\xc1\x6e\xdb\x3a\x10\x3c\x9b\x5f\x31\xcf\x78\x08\x6c\xc3\xa6\xee\x0f\xf0\xe1\x35\xe8\x21\x97\xa0\x40\xd3\x43\x51\x14\x05\x2d\xad\x64\x22\x12\xa9\x90\x54\x03\x43\xe1\xbf\x17\xa4\xa4\x58\x72\x93\xca\xa8\x4e\xd6\x8a\x9c\xdd\x99\x9d\x5d\x27\x09\x1e\x8e\xd2\x22\x97\x25\xe1\x59\x58\x14\xa4\xc8\x08\x47\x19\x0e\x27\x14\x7a\x97\x09\xbd\x4b\x75\x46\xbb\x82\x14\x07\x4b\x12\x7c\xd5\x0d\x52\xa1\x50\xe9\x4c\xe6\x27\x48\x07\xa7\x71\x20\x54\xda\x10\x6c\x23\x9d\x38\x94\xc4\xc1\x58\x2d\xd2\x47\x51\x10\xda\x16\xfc\xd3\x63\x01\xef\x19\x93\x55\xad\x8d\xc3\x8a\x2d\x96\x85\x74\xc7\xe6\xc0\x53\x5d\x25\xc7\x46\xa8\xac\x49\x0a\xbd\xb3\x4f\xe5\xa1\x91\x65\x46\x66\xc9\x00\xa0\x6d\x77\x30\x42\x15\x04\x7e\x17\xaf\xda\x00\x83\xfe\x59\x06\x68\x78\x7f\x3e\x4b\x2a\x0b\x07\xd6\x2c\x54\x1a\xbe\x3e\x84\x6a\xbe\xd4\x35\x99\x5b\x51\x51\x79\x97\x91\x72\xf0\xfe\x56\xab\xcc\xc2\xd6\x94\xca\x5c\x92\x85\x3b\x12\x52\xad\x32\xe9\xa4\x56\xc8\x25\x95\x99\x85\xce\x63\xbc\x23\xc4\xdc\xa9\xa6\x2b\x20\x9d\x69\x52\x87\x96\x8d\x2a\xff\xdf\x39\x33\xa9\x3b\xa0\xdc\x8b\x8a\xe0\x3d\x36\x11\x32\x60\x7b\x1f\x3e\xc8\x1c\xfc\x56\x57\x55\x07\xda\xb3\x38\x07\x46\x2c\xc1\x46\x8c\xfd\x35\x8c\x2f\x09\x97\xda\x36\x86\x90\x37\x2a\xed\x78\x6b\x73\x56\xc1\x5e\x47\x39\xde\x5e\x6d\xe6\x84\xe9\x3a\x72\x4f\xcf\xb3\x0a\x1a\x72\x8d\x51\x16\x62\x54\x0a\x48\x39\xe9\x4e\xc1\x93\x02\xa5\xb4\x2e\xf4\x66\xd4\xaf\x9e\x80\xe5\x2c\xfc\xbc\x26\xcd\x2a\x8d\xc9\x38\xe7\x33\x27\xd7\xf3\x3d\x6f\xd9\xe2\xa7\x30\xd0\xb3\x27\xd9\x22\x28\xfc\x63\x1b\x4b\xc7\x7f\xfb\xde\x20\xe9\x80\xb2\x08\xbf\x56\x37\x7a\xcd\x16\x9e\x2d\x3a\x21\xa0\x43\x6f\xdf\x72\x53\x92\xe0\x33\xb9\xb6\xc5\xbf\xef\x25\x1d\x7c\x36\x09\x8e\x05\x7e\xcb\x00\xd3\x51\xd0\x2a\x06\xe2\x44\xf4\xea\xfe\x4d\xd2\xd5\x24\xda\x5b\x7d\xb0\x7d\x94\xf8\x5d\xbc\x68\xb2\xf6\x55\x8e\x68\x37\x1d\xc7\xe6\x8f\x57\xec\x3a\x2a\xaa\xf9\x78\xd8\xf6\xb8\xb9\x2c\x24\x48\x1d\x05\x1e\x26\xa9\x23\xf9\x21\x6c\xa1\x59\x13\xd9\xa7\x32\x96\xb7\x39\xef\x2d\x1e\x02\xdb\xbe\xa7\xf3\x63\x81\x95\x30\x85\xc5\xb7\xef\xd6\x19\xa9\x8a\x50\x74\xd8\x10\x32\xc7\x80\xbd\xdf\x43\xc9\x12\x2f\x2f\x3d\x66\xff\xde\xbe\x6e\x93\x4e\x98\xf8\xea\x2f\x97\x66\x34\xcb\x64\xf3\xec\x02\xb6\xa2\x5e\xfc\xa5\x93\x15\xf1\x07\x59\xd1\x32\x6e\x14\x8c\x1e\xd9\x8d\x98\x9d\x28\xf8\xcf\x65\xf6\xe1\x89\x34\xf6\x10\x75\x4d\x2a\x8b\xa4\xb6\x03\x05\xfe\xf1\xa9\x11\xe5\x6a\xd9\x89\x11\xfe\x08\x96\x5b\x6c\x7e\xc3\x5e\xaf\x27\xa0\xd3\xa2\xfb\xe6\x5c\xbc\x0e\xa6\x08\xe9\x98\x67\xbf\x02\x00\x00\xff\xff\x2b\x59\x72\x45\xce\x06\x00\x00"

func condsTplBytes() ([]byte, error) {
	return bindataRead(
		_condsTpl,
		"conds.tpl",
	)
}

func condsTpl() (*asset, error) {
	bytes, err := condsTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "conds.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _daoTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x54\xc1\x6e\xe3\x36\x10\x3d\x8b\x5f\x31\xd5\x49\xf2\xda\x52\x72\xdd\x5d\x1d\x9a\xa4\xbb\x08\xba\x4d\x5a\xd8\x2d\x0a\x04\x41\x41\x4b\x23\x66\x10\x8a\x54\x48\xda\x89\x1b\xf8\xdf\x0b\x92\x92\xad\xac\xd3\xcd\xc1\xb1\x67\xde\x7b\x33\xf3\x46\xa3\xb2\x84\xd5\x03\x59\x68\x49\x22\x3c\x73\x0b\x02\x15\x1a\xee\xb0\x81\xf5\x0e\x84\x5e\x34\x5c\x2f\x6a\xdd\xe0\x42\xa0\x62\xac\xe7\xf5\x23\x17\x08\xaf\xaf\x50\xfc\xfe\x28\x60\xbf\x67\x8c\xba\x5e\x1b\x07\x19\x4b\xd2\x5a\x2b\x87\x2f\x2e\x65\x49\x8a\xc6\x68\x63\xfd\x37\x83\xad\xc4\x3a\x04\xad\x33\xa4\x84\x4d\x19\x00\x40\xda\x70\xc7\xd7\xdc\x62\x69\x9f\x64\xca\x58\x92\x0a\x72\x0f\x9b\x75\x51\xeb\xae\x14\x7a\x61\x9f\xe4\xa2\x31\xb4\x45\x53\x76\xbb\x00\xc9\x19\xab\xb5\xb2\xbe\x96\x17\x28\x4b\x58\x3e\xf0\x46\x3f\x5f\xba\x97\x5f\x71\x07\xb6\xc7\x9a\x5a\x42\x0b\xee\x01\xc1\x86\x14\x50\x83\xca\x91\xdb\x01\x29\x18\xda\x2b\x58\xf2\x96\x17\xba\x82\x0a\xd2\xbf\x17\x31\x91\x8e\xfa\x5f\xb4\xa9\xf1\x37\x6e\x1d\x9a\xeb\x51\xe8\x6d\x99\xd6\x23\xa0\x0b\x10\x70\x5c\xf8\x3a\xcb\x3f\xbe\x41\xad\xbb\x0e\x95\x2b\x82\xd2\xbb\x32\x87\xaa\xe5\x2c\x88\xfc\x13\x45\x66\x25\x84\x49\xb7\xdc\x78\x4f\x85\xd4\x6b\x2e\xaf\x2e\xbc\x0c\xcc\xec\x93\x2c\xae\x2e\x7c\xba\x2c\xe1\x5a\x91\x03\x52\xe4\x88\x4b\xfa\x77\xe8\x67\x34\xd5\x0f\xab\xb0\x76\xa4\x15\x70\xd5\x00\x6f\x1a\x3b\x7a\xd2\xf1\xbe\x27\x25\x0a\xd6\x6e\x54\x1d\x64\xb2\xda\xbd\x1c\xec\xb9\x8c\xff\xe7\x50\xb7\x02\x66\xc1\x7b\x1f\x6b\x49\xe4\x90\xa1\x31\x10\x76\x9b\xc3\x6b\x98\x8d\xda\x80\xab\x2a\x50\x24\x87\x98\xff\xf3\xc0\x2a\x42\x6d\x71\x83\xcf\x59\x1a\x94\x7c\x95\x96\x04\x90\xf5\xf8\x34\x3f\xe0\x0d\xba\x8d\x51\xe1\xe7\x3e\x7c\x0e\x03\x68\x33\x0f\x5a\x1f\x2b\x88\xad\xdc\xe0\xf3\xe5\x98\xca\xea\x56\xe4\x63\x1b\x1e\xf5\xd3\xf7\x6d\xbc\x91\x3d\xba\x59\x81\x97\xba\xed\x51\x5d\x5d\x64\x87\x4a\x39\x4b\x06\xfc\x3e\x38\x7c\x29\xb5\x77\xd2\x7f\x46\x77\x27\xa6\xf6\x5a\xcb\x02\xfe\xb4\x08\xce\x1f\x10\xa9\x00\xe8\x38\x29\xf0\xb6\x06\xcc\x96\x38\x34\xd8\xa2\x19\xac\x0e\x7a\xd9\xc4\xb9\x43\x3f\x27\x7d\x8f\x99\x62\xe0\x0c\x13\xec\x0f\x9b\x5f\xf1\xb5\xc4\x2f\x84\xb2\xb1\x27\x0f\x41\xeb\xc3\xa0\x78\x87\x16\x24\x59\x07\xad\xd1\x1d\x70\x70\x9e\x03\xf1\x01\x2c\x00\x8e\xfb\x9f\x88\x65\x5b\xe0\x6a\x37\x8f\x1a\x16\x66\x77\xf7\xf1\x49\xf5\x5d\x27\xce\xaf\x61\x38\xe8\x62\xb5\xeb\xf1\xb6\xcd\xb6\x39\x4b\x66\x03\xba\x82\x8e\x3f\x62\x36\x72\xe6\x70\x36\x07\x57\xdc\x6c\xba\xa0\x9d\xe5\x39\x4b\xfc\x73\x1d\xd0\x37\xbc\xc3\xe1\x0a\x58\xd2\x6a\x03\xe4\xc5\xcf\x3e\x01\xc1\xe7\x37\xa4\x4f\x40\x1f\x3e\xf8\xea\x89\xbf\xaf\x8f\x15\xb8\x22\x66\x28\x2f\x56\x5c\x14\x5f\xd1\x65\x69\xb3\x4e\x73\x96\x24\x47\xe5\x6a\xd0\xb6\xc5\xb2\x97\xe4\x32\xc7\xc5\x1c\xd2\x79\x9a\xdf\x9d\xdd\xb3\x24\xa1\x76\xd2\x45\x55\x41\x9a\x86\x0a\x89\x3f\x02\x52\x1b\x64\x49\xb2\x67\xc9\x64\x30\xde\xf7\xa8\x9a\x6c\x08\xcc\x0f\xea\x2b\x43\xdd\xb2\xe7\x35\x66\x07\x3d\x3f\xe6\xc9\xaa\x7e\x96\xc4\x4f\x37\xc5\x43\x54\xb7\xa3\xdd\xef\x2d\xea\xbb\x35\x05\xa1\x71\x4b\x91\xcf\xd5\x2e\xac\xc7\xfc\xdf\x7e\xcc\x76\x9a\xf8\x8b\xcb\x8d\xcf\x04\x72\x7e\x6a\xbe\x79\xdf\xfd\xab\x8b\x55\xf4\xdf\xfc\x60\x01\x8e\x0b\xeb\x31\x6f\xcd\x0f\xd4\x68\x7f\xf4\x5e\xa2\xf2\x1b\xb1\x39\x7c\x86\xf3\x77\x9d\x37\xdb\xe2\x17\x89\x5d\x96\xc7\x5a\x17\x3b\xef\x6c\x36\x2d\x1d\xac\x2e\x96\xe8\x96\xa1\x56\xd0\xbb\x3b\xbb\x9f\x98\xff\x15\xdd\x6d\xdb\x5a\x74\x50\x73\x59\x6f\x24\x77\x83\xed\x3d\x17\xa4\x78\xb8\x51\x1d\x00\x83\xc9\x07\x42\xd6\x73\x81\xd7\xaa\xc1\x17\x20\xe5\xe6\x9e\x80\xdf\xa8\x0b\x2f\x5c\x97\x43\x16\x59\xf1\xc7\xe1\x9a\x8f\xa0\x38\xd4\x78\xcb\xc7\x78\x05\xe7\x67\x93\x57\xdc\xc0\x89\x75\x4e\x39\x31\x5e\xc1\xf9\x84\x12\xdf\x4f\x30\xe9\x6f\x01\xe7\x39\xcc\x8e\x45\xd8\x9e\xfd\x17\x00\x00\xff\xff\x04\x68\xbc\x95\xd6\x07\x00\x00"

func daoTplBytes() ([]byte, error) {
	return bindataRead(
		_daoTpl,
		"dao.tpl",
	)
}

func daoTpl() (*asset, error) {
	bytes, err := daoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "dao.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tableTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5b\xeb\x6f\xdc\x36\x12\xff\x2c\xfd\x15\xd3\x05\x2e\xd0\xf6\xd6\xb2\x0b\x1c\xee\x83\x7b\x5b\xc0\xb1\xdb\x22\x40\x9a\xb4\x4d\x7b\x87\x43\x60\xb4\x94\x38\x5a\xf3\x22\x91\x6b\x92\xf2\x03\x5b\xfd\xef\x07\x3e\xf4\x5a\xaf\x25\xad\x63\x07\x6e\x91\xfd\x90\x78\xf9\x18\xce\x0c\x67\x7e\x33\x1c\x72\x0f\x0f\xe1\x97\x0b\xa6\x20\x63\x39\xc2\x35\x51\xb0\x42\x8e\x92\x68\xa4\x90\xdc\xc2\x4a\x1c\x50\x22\x0e\x52\x41\xf1\x60\x85\x3c\x86\xf0\xf0\x10\xfe\x2b\x4a\x48\x09\x87\x42\x50\x96\xdd\x02\xd3\xa0\x05\x24\x08\x85\x90\x08\xaa\x64\x9a\x24\x39\xc6\x10\x86\x6b\x92\x7e\x20\x2b\x84\xcd\x06\xe2\x1f\x3f\xac\xa0\xaa\xc2\x90\x15\x6b\x21\x35\x44\x61\x30\x4b\x05\xd7\x78\xa3\x67\x61\x30\x43\x29\x85\x54\xb3\x10\x00\x60\x96\x15\xda\xfd\xb5\xd9\x48\xc2\x57\x08\xf1\x2b\x3b\x49\x55\x95\x1b\xb0\xd9\xc4\x55\x55\x0f\x41\x4e\x7d\x7b\x18\xcc\x56\x4c\x5f\x94\x49\x9c\x8a\xe2\xf0\xa2\x24\x9c\x96\x87\x2b\x71\xa0\x2e\xf3\xa4\x64\x39\x45\x39\x0b\xe7\x61\x98\x0a\xae\x34\x44\x70\x78\x68\x19\xfb\xc5\x70\xfb\x5a\x5c\xa3\x3c\x25\x05\xe6\xaf\x28\x72\x0d\x55\x65\x9b\xdf\x90\x02\x41\xad\x31\x65\x19\x43\x05\xfa\x02\xc1\x0a\x07\x9c\x14\x18\x7b\x06\x3c\x89\x5f\xd7\xeb\x7b\x49\x2c\x0d\xcf\x7e\x1c\xd4\xac\x1f\x1e\xc2\x0f\xe4\x66\x60\xfe\x6b\x56\x30\xbd\xb5\x7c\x6e\xdb\x44\x06\x8c\x2b\x94\x1a\x08\xa7\xa0\x30\xc7\x54\x83\x58\x9b\x7d\x63\x82\xab\x38\x0c\xa6\x50\x66\x5c\xc3\x12\xbe\x3a\x3a\x3a\x32\x6a\xb9\x22\xd2\xec\xca\x80\x4a\x4e\x72\x46\x14\xf8\xcf\x00\x75\x3b\x6e\x90\xd2\x77\x0c\x73\x5a\x93\x7a\x7f\xae\xb4\x64\x7c\x65\x98\xe8\xee\xc9\x5d\xc2\x67\x44\x6c\xa9\xe3\xec\xe4\x2d\x88\xe4\x7f\x98\xea\x38\xd4\xb7\x6b\x1c\x9d\xad\x65\x99\x6a\xd8\x84\x01\x4d\xa0\xf9\x7c\xa9\x2e\xf3\xf8\xec\xa5\xdd\x95\x4c\xc8\x14\x7f\x20\x4a\xa3\x84\x44\x88\xdc\x36\x7e\x39\x2a\x6d\x35\xc6\xbb\x53\x9e\xc4\xb5\x44\x85\x5c\x3b\xf6\x89\x6d\x14\x19\x64\x4e\x21\x8c\x7b\xfb\xea\x5a\x4b\x0c\xa3\xa2\x39\xe2\x8d\x70\x9b\xcd\x01\x78\xcf\x39\xd1\x5a\x2a\xf0\x0e\x52\xef\x9b\xb5\xc9\xaa\x02\xa7\xf7\xd6\x11\xac\x87\x9a\xc9\xc8\xa9\xf9\x73\x54\xa8\x6f\xb9\x66\xfa\x76\x5b\xaa\x2e\xf3\x5e\x9e\x82\xac\xd7\x8c\xaf\x1c\x7e\xfc\x98\x23\x51\xa6\x8d\x97\x24\xcf\xcd\xf4\x42\x5c\xa1\x9d\x5a\xae\x29\xd1\xc6\xc9\x56\x90\x49\x51\xd4\x7a\xd1\x17\x44\x03\x91\x08\x5c\x68\x20\x79\x2e\xae\x91\x36\xa0\x43\x8d\x39\xd0\xf1\xfd\xf7\xcc\xee\xad\x25\x4b\xd2\xd0\xae\x2a\xf8\x9d\x26\xc7\xb3\x56\x59\xb3\xdf\x4d\x2f\xcb\x20\x3e\x15\x45\x61\x96\x39\xa8\x2a\xaf\xb2\xba\xc5\x52\xa8\x55\x0a\x5b\xea\xcd\x4a\x9e\x02\xe3\x4c\x47\x73\xd8\xd8\xd5\x5f\x71\xa6\xad\x00\x76\x4f\xa3\x51\x79\x36\xd5\x02\x5e\x8c\x39\xed\x3c\x0c\x1a\xba\xce\xf7\x3e\x9e\xb0\xa3\x33\xf7\x46\xf2\x06\xaf\x47\x5c\x2f\x95\x48\x34\x2a\x20\xc0\xf1\xda\x9b\x45\xed\xba\x56\x0d\xa3\x24\xa2\xf9\xa0\x23\x9a\x45\x36\x61\x20\x51\x97\x92\x77\x58\xdf\x39\x72\x13\x06\x01\x4d\x8e\x61\x95\x8b\x84\xe4\x67\x2f\x17\xe1\x54\x60\x3b\x1e\x57\xf7\x22\x0c\x6a\xe7\x79\xe5\x60\xda\xa1\xb5\x02\xc1\x11\x28\xd1\x04\x24\xa6\x42\x52\x2f\x79\x44\xc7\x04\x9b\x7b\x42\x51\xaa\x6f\xc0\xc7\xcd\xf8\xd4\xfd\xbf\x80\x2b\x92\x97\xa8\x8c\x93\xbd\x77\x2e\x7d\x4e\xf8\xed\x3c\xca\x89\xd2\x6e\xda\xab\x33\x03\xf6\xff\xfc\xc7\x02\x50\x4a\xb0\xc1\x76\xee\xcc\x8d\x65\x90\x23\x8f\x1c\x85\x39\x2c\x97\x70\xe4\x0d\xd1\x7c\xbc\x2e\xbb\x84\x16\x6e\xba\x8a\xdf\xe0\x75\x34\x5b\x13\x49\x8a\x7a\xfd\x94\x70\xe3\x9f\x09\x02\x16\x6b\x7d\x3b\x9b\x5b\x3a\xce\xa9\x52\x91\x2b\x38\x5e\x42\x41\x3e\x60\x54\x23\xfe\x02\x8e\x16\xdd\xe5\xdd\x84\x2b\xd2\x1b\x4a\xf8\xed\xee\x71\x99\x90\xf0\xdb\xc2\x41\x84\x19\xef\x7c\x79\x3c\xea\xb4\xe2\xb1\xcc\x2c\xb6\x00\xf1\xc1\xcc\x77\xc4\xdf\x5b\x7a\xe7\x5f\x9b\xc6\x76\x64\x23\xc2\x12\xc8\x7a\x8d\x9c\x46\xe6\x9b\x5f\x7c\xde\x1b\x66\xd9\x6f\x86\x99\x6f\x76\x83\xda\x41\x15\x74\xf4\xe2\xf5\x6f\xa8\xed\xaf\x7d\x2e\x0c\x65\x46\xbd\x0e\xac\x61\x65\xa2\xe4\xb4\xa7\x7a\x83\x38\x2c\x03\x21\x21\xe2\x08\xf1\x2f\xac\xf0\x18\x10\x9f\x5a\x97\x34\x0d\x30\x9b\xcd\xef\x74\xff\x6a\xc1\xb8\xee\xf6\xe8\x98\x96\xd2\xb6\x1c\x2f\x41\xb3\x02\xe3\x37\xe2\x3a\x9a\x37\xeb\x78\x64\xeb\x2c\x3b\xb4\x64\xd5\xe8\xe0\xb7\xad\x4d\x30\x29\xde\xce\x59\x55\x35\x3b\xff\x1a\xbe\xe8\x6d\xce\xae\x8d\x19\x22\x30\xef\xf8\xba\xe5\x11\x2f\x77\xf1\x68\x20\x7f\xc6\xb8\x9e\x75\x03\xc3\xae\xdd\xf5\x2a\x89\x7f\xe5\xec\x26\x9a\xf7\xa9\x63\xae\x70\xe2\xfc\xad\x89\xad\x26\xab\xe9\xea\xed\x6d\xd9\x64\xf5\xb6\xb3\x1e\xa8\xde\x1e\x81\x31\xf5\xfa\xc1\xcf\x5b\xbd\x2c\x31\xea\x6a\x4f\x0e\xc6\xe1\x9c\x13\xbe\x74\x0d\xde\xe8\x59\x12\x7b\xdf\xe4\x5a\x0c\x05\xd5\xe6\x30\xd0\xcc\x3b\x15\xb9\xb2\xea\x8c\xe3\xb8\x69\xfc\xb7\xdd\x20\xcb\x79\xd3\xac\x2e\xf3\x05\x10\xb9\xb2\xa8\xc8\x92\xd8\x72\x10\xcd\x4d\xa8\x53\x65\xae\x1d\xa8\x1f\x2f\x81\xc6\x34\x89\xbf\xbd\xc1\x34\x32\x33\xcc\x04\x4b\x22\x30\x5b\x20\x25\x7c\xb1\x04\xce\xf2\x76\x5f\xcd\xc9\xef\xed\xd9\xdb\x63\xc8\xc5\xca\xc1\x4a\x18\x04\xbb\x30\xc7\x4c\x36\x11\xad\xee\x74\xcb\xc6\xaf\xdb\x31\x86\x9b\x6e\xbc\xfb\x81\xf0\xdb\x26\xe6\x15\x65\xae\xd9\x3a\xef\x05\x3e\xb5\x77\xe4\x33\x24\x07\xa2\xdf\x6b\xa6\x34\xbc\x3f\xdf\x0a\x81\x10\xb5\xf1\xce\xe4\x06\xdd\x68\x67\x66\x34\x90\x5b\x0b\x6e\xc4\xdc\x0e\x8b\x6e\xe0\x37\x93\x0e\x6b\x77\xc0\x3b\x2b\x74\xfc\xad\x59\x3f\x8b\x66\x12\x53\x64\x57\x48\xe1\x6f\x0e\xab\x17\x80\x37\x29\x22\x35\x39\xb8\x49\x7e\x0b\x72\xc3\x8a\xb2\x30\xdd\xf6\x98\x37\x5b\x6c\x31\xb1\x98\xc2\x43\x0d\xfd\x81\x39\xd0\x59\xdf\x6d\x0e\x58\xb6\xc9\x98\x96\xd7\x96\x0d\xae\x61\x60\x02\x29\xe3\x14\x6f\x9a\x4c\xa2\x89\xa6\xad\x6e\x8d\x8e\x76\x27\x0b\x41\x63\x35\x7b\x64\x06\x81\xb1\xa7\x60\x4a\xa8\x0f\x82\x87\x07\xfa\xc0\xf2\x3c\x12\xe3\x03\x37\xca\x6a\xa0\x23\x53\x10\x0c\x04\x7c\xd3\x5d\xd9\x7f\xef\x0d\xf7\x7e\x44\x2d\xa6\x55\x62\x6f\x9c\x69\xb1\x63\x4d\x7a\x5e\x35\xc6\xd9\x4b\x05\x76\xaa\x76\x28\xec\x07\xfb\x06\x5f\x63\x12\x17\x44\x9d\x50\xea\x7a\xdb\x43\xef\x9d\xb8\x61\x18\x7e\x7f\x74\xfe\xa9\x82\x73\x8f\xab\x25\x68\x59\xe2\x63\x84\xc3\x56\x60\xd7\xbb\xbf\xc0\x4f\x15\x2e\x7b\x5c\x0d\x09\x1c\x4c\x89\x4e\xc1\x43\x42\x53\xb0\x33\x2e\x4d\xce\x20\xc7\x53\xc8\x60\x52\xfe\x58\xbb\x7c\x8d\x0f\x0d\x18\x29\x8f\x45\x5b\x19\xc6\x04\x3b\xf7\x1b\xdc\x33\xaa\x7e\x7e\xbf\x7f\x32\xb8\x6f\xc6\x72\x5f\xd6\x32\x39\x73\xd9\x61\xf8\xad\x81\xdc\xd3\x39\xdd\x33\x7a\x2a\xf2\x66\x38\x45\x45\x43\x09\xdd\xb3\x56\x51\x10\xec\xc8\xb8\x0c\x14\xdf\x9b\x71\xfd\xe6\x92\xad\xed\x5c\x0b\xee\x49\xb6\xb6\x10\xbc\x9b\x44\x71\x96\x9b\x94\xc9\xe4\x4c\xdf\xa3\x36\xe9\x82\x64\x78\x85\x77\x4a\x04\xae\xf6\x55\x20\xfa\xe2\xda\x65\x89\xf2\x16\x52\xc9\x34\x4a\x46\xf6\x48\xa3\xbe\xc7\x7b\xaa\x07\xa9\xe0\x54\x41\x1c\xc7\x03\x14\x4e\x05\xa7\x73\x88\x06\x62\xae\xaf\xae\x0d\xb1\xe1\x86\x74\x6b\x10\x46\x3f\x6a\x07\x96\xbd\xb3\x15\xed\x0e\x96\xa9\x24\x76\x6d\x43\x2c\x78\x73\xb4\xdb\xa0\x92\xf8\x3b\x29\x8a\xa9\xb0\x27\x0c\x0f\xc3\x05\x28\xa3\x02\x83\x8b\xbc\x59\xe2\x32\x3f\xf1\x26\x62\x39\x1d\x9d\xfb\x42\x19\x70\xe5\x74\x01\x2f\x84\x63\xf1\x3f\x17\x28\x31\xf2\x84\xda\x7c\x3f\x89\xdf\x4a\x8a\xf2\xe5\x6d\x64\x02\xc7\x8f\x92\x15\x44\xde\x9a\x50\x11\x9f\xa1\x4a\xbd\x3e\x6c\xb2\x17\x7d\x35\xdf\xb2\x56\xd5\x5a\xab\xf7\x67\x1a\x77\x6b\xda\xad\x43\xab\xcb\x1c\x96\xf0\x5d\xdb\x67\xb9\x35\x9b\xf8\x77\xd3\x57\xa7\x91\x52\x5c\xab\xfe\x11\xe3\x27\x63\x82\x53\xed\xde\xda\x3c\xc5\x0c\x25\x18\x4a\xf1\x69\x2e\x14\x46\x6e\x82\x6d\x78\x83\x37\xae\xfa\x19\x0c\xdd\x18\x78\xf3\x5a\x0e\xd6\xf5\xea\xc2\xe5\x30\xa9\x77\xae\x00\x7c\xd7\xe8\x6c\x7b\xc4\xf1\x7a\xbc\x38\x6a\xf3\x52\x87\x04\x56\x88\x77\x29\xe1\x43\xa6\xe9\x68\xc7\x27\x94\xca\x71\x27\x9a\x37\x96\xe0\x77\xb0\xa7\xd8\x2e\xd0\x79\x2c\xe9\xa0\x5c\x8b\x30\xfe\x40\x76\x2a\x4a\xae\xfd\x40\x7f\x83\x25\x34\xc9\x81\x97\x45\x82\x12\x44\xd6\x3b\x96\xb5\x68\xf3\x71\x60\x63\x57\xfd\x68\xb8\x71\x9c\x32\xae\x3f\x12\x33\x66\xa9\x65\xe7\xcb\xf9\xec\x4f\x8c\x0c\xcf\xd3\xcd\xeb\x55\x06\x8a\x09\xfb\x20\xc0\xb6\x4b\xbd\xb0\x26\xf0\x68\xce\x60\xb3\xc7\x36\xd4\xee\xac\x4c\x3c\x96\x0b\x98\xb5\x76\x7b\x80\x3d\xdc\x2f\x40\x64\x99\x42\xed\xcc\xfb\x71\x62\xb0\x3f\xd6\x7f\x8e\xc1\x9f\x22\x06\x7b\x73\x74\x17\xf2\xff\x32\xc7\xf5\x3f\xfe\xf0\xdf\xf6\xa9\x15\xb5\xa1\x7c\x7a\x6d\xc7\x65\xc7\xdb\xf3\xf3\x6e\xf5\xc7\x73\xe7\x6d\xec\x9b\xf6\x62\xc1\x8c\x7f\x6b\x5b\x23\xd7\xd9\xd4\x8b\xfe\x72\xf8\xf2\x09\x72\x00\x73\x4e\xdd\x3f\x8b\x39\x9e\x9c\xc6\x3c\xcb\x14\x63\x48\xc2\x7e\x99\x6b\x64\xe0\x62\xa8\x88\xe7\x19\xbd\x0b\xe2\x27\x79\xde\xc1\x70\x92\xe7\x4f\x02\xdf\x27\x79\x3e\x80\xde\x9f\x51\xfb\xaf\x80\xda\xdf\xf4\x50\x71\x07\x8a\x7e\xc6\xc4\xcf\x98\xf8\xa7\xc0\x44\x5f\xad\xf3\x8f\xa1\xdc\x39\xef\x91\x01\xd1\x2d\xb1\xc7\x03\x94\x87\x1d\xf5\xfa\x8f\x54\x3a\x97\x76\x96\xd8\xce\x0b\xbb\xa0\xdc\x01\x84\x8e\xdd\x0e\x10\x96\x89\x2f\x54\x4e\x45\x36\x7b\xbb\x62\xf7\x6e\xfc\xdd\xca\xd6\x1d\xda\xd6\x05\x9a\xbb\x8a\x6a\xe9\x35\xb6\xd0\x34\x2d\xa0\x4c\xe2\x13\xa5\xd8\x8a\x47\x2d\x99\xb9\xdb\x69\x4f\xc3\x5a\x62\xa3\x8e\x66\xea\xbd\x77\x98\xfb\x15\x7e\x1f\x56\xda\x9d\x2a\xd3\xd0\x05\xc8\xa2\x73\x11\x50\xd7\x83\x87\x6f\xf9\x9f\x62\xe5\xed\x25\xfb\x57\x4b\x75\xc1\xb8\x34\xd1\x54\xb7\x2b\x39\x80\xfe\x34\x31\xb0\xec\xc5\xc0\x72\xbc\x46\x50\x4e\x7d\x2a\xf0\x08\xb1\xa6\xff\x34\xe0\x67\x71\xad\x4e\xb2\x0c\x53\x8d\xed\xd3\x80\x33\xcc\x51\xa3\x7f\xed\xf9\x24\x10\xe5\x56\x78\xbc\xb2\xd3\x43\xb0\x88\xee\xc0\x22\xc7\x57\x07\x8b\x68\x12\xbb\xb6\xe7\x97\x69\xd1\x9e\x95\xd1\x71\x2b\xa3\xcf\xcb\xca\x6c\x06\x05\x78\x83\x69\xe9\x5e\x9b\xa6\xa5\xd2\xa2\xf0\x46\x45\x38\xed\xd5\x42\x77\x1b\xe0\x03\x4c\xcf\x25\x6e\x6e\x91\x3a\x48\x58\x0d\xc5\x71\xec\x5e\xa2\xd8\x47\xe6\x3f\xd7\x19\x9f\xb3\xa7\x91\x34\xd2\x91\xbb\x2f\x91\xb4\xbd\x9d\xe3\xbe\x57\x4e\x27\x8f\xb4\x23\x3a\x7a\x77\x1a\x32\x1b\xb2\x43\x41\xef\x7e\x7a\x0d\x4a\x13\x8d\x05\x72\xbd\x87\xe4\x76\x7f\x87\x04\xb7\x72\xb7\x86\xf1\xc4\x92\xb7\xec\xf4\x05\x37\x92\x77\xa8\x01\xa1\x54\xf9\x57\x37\xf6\x3b\xab\xc9\x9b\x48\xde\xfe\x94\x02\x44\xe6\x4c\xa2\x94\xd2\x08\xed\x5f\x2c\xc3\x74\xfd\x74\x16\x8d\xfc\xa3\xdb\xbe\xd4\xfe\xa6\xdf\x83\x24\x53\xf6\x91\x76\xa7\xbf\x0b\x98\x4f\xcd\xec\xdd\xe5\xef\xe3\x39\x23\xb9\xc2\xe6\x09\xfb\xa4\x04\x52\xe1\xa9\xe0\x3c\xa2\x49\xfd\x83\x8b\x86\x34\x4d\xc0\x00\xc9\x5e\xe4\x4e\x73\xc1\x1d\xc1\x39\x74\x69\x7a\x2b\xea\xd8\x44\x58\x85\xff\x0f\x00\x00\xff\xff\xb0\xc0\x8f\x90\xe6\x34\x00\x00"

func tableTplBytes() ([]byte, error) {
	return bindataRead(
		_tableTpl,
		"table.tpl",
	)
}

func tableTpl() (*asset, error) {
	bytes, err := tableTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "table.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"conds.tpl": condsTpl,
	"dao.tpl":   daoTpl,
	"table.tpl": tableTpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"conds.tpl": &bintree{condsTpl, map[string]*bintree{}},
	"dao.tpl":   &bintree{daoTpl, map[string]*bintree{}},
	"table.tpl": &bintree{tableTpl, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
